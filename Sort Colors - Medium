Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
You must solve this problem without using the library's sort function.
it is very similar to the Dutch National Flag Algorithm which was proposed by dijkstra.
here the approach is 2 pointer. approach is that 0 will always be in the beginning or lo and 1 will always be in mid and 2 will always be in end or hi. and if they are not, they are being swapped.
<------ Code --------!>
    def sortColors(self, nums: List[int]) -> None:
        lo= 0 
        mid = 0 
        hi= len(nums)-1
        while mid<=hi:
            if nums[mid]==0:
                nums[mid],nums[lo]= nums[lo],nums[mid]
                lo+=1
                mid+=1
            elif nums[mid]==1:
                mid+=1
            else:
                nums[hi],nums[mid]=nums[mid],nums[hi]
                hi-=1
        return nums
